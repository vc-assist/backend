// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file lib/platforms/powerschool/query_schedule.proto (package lib.platforms.powerschool, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message lib.platforms.powerschool.CourseMeeting
 */
export class CourseMeeting extends Message<CourseMeeting> {
  /**
   * @generated from field: string section_guid = 1;
   */
  sectionGuid = "";

  /**
   * @generated from field: string start = 2;
   */
  start = "";

  /**
   * @generated from field: string stop = 3;
   */
  stop = "";

  constructor(data?: PartialMessage<CourseMeeting>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "lib.platforms.powerschool.CourseMeeting";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "section_guid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "stop", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CourseMeeting {
    return new CourseMeeting().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CourseMeeting {
    return new CourseMeeting().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CourseMeeting {
    return new CourseMeeting().fromJsonString(jsonString, options);
  }

  static equals(a: CourseMeeting | PlainMessage<CourseMeeting> | undefined, b: CourseMeeting | PlainMessage<CourseMeeting> | undefined): boolean {
    return proto3.util.equals(CourseMeeting, a, b);
  }
}

/**
 * @generated from message lib.platforms.powerschool.CourseMeetingList
 */
export class CourseMeetingList extends Message<CourseMeetingList> {
  /**
   * @generated from field: repeated lib.platforms.powerschool.CourseMeeting section_meetings = 1;
   */
  sectionMeetings: CourseMeeting[] = [];

  constructor(data?: PartialMessage<CourseMeetingList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "lib.platforms.powerschool.CourseMeetingList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "section_meetings", kind: "message", T: CourseMeeting, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CourseMeetingList {
    return new CourseMeetingList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CourseMeetingList {
    return new CourseMeetingList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CourseMeetingList {
    return new CourseMeetingList().fromJsonString(jsonString, options);
  }

  static equals(a: CourseMeetingList | PlainMessage<CourseMeetingList> | undefined, b: CourseMeetingList | PlainMessage<CourseMeetingList> | undefined): boolean {
    return proto3.util.equals(CourseMeetingList, a, b);
  }
}

/**
 * @generated from message lib.platforms.powerschool.GetCourseMeetingListInput
 */
export class GetCourseMeetingListInput extends Message<GetCourseMeetingListInput> {
  /**
   * @generated from field: repeated string section_guids = 1;
   */
  sectionGuids: string[] = [];

  /**
   * @generated from field: string start = 2;
   */
  start = "";

  /**
   * @generated from field: string stop = 3;
   */
  stop = "";

  constructor(data?: PartialMessage<GetCourseMeetingListInput>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "lib.platforms.powerschool.GetCourseMeetingListInput";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "section_guids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "start", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "stop", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetCourseMeetingListInput {
    return new GetCourseMeetingListInput().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetCourseMeetingListInput {
    return new GetCourseMeetingListInput().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetCourseMeetingListInput {
    return new GetCourseMeetingListInput().fromJsonString(jsonString, options);
  }

  static equals(a: GetCourseMeetingListInput | PlainMessage<GetCourseMeetingListInput> | undefined, b: GetCourseMeetingListInput | PlainMessage<GetCourseMeetingListInput> | undefined): boolean {
    return proto3.util.equals(GetCourseMeetingListInput, a, b);
  }
}

