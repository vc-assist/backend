// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: query.sql

package db

import (
	"context"
)

const createStudent = `-- name: CreateStudent :exec
insert into Student(id, username, password) values (?, ?, ?)
on conflict (id) do update set
    username = EXCLUDED.username,
    password = EXCLUDED.password
`

type CreateStudentParams struct {
	ID       string
	Username string
	Password string
}

func (q *Queries) CreateStudent(ctx context.Context, arg CreateStudentParams) error {
	_, err := q.db.ExecContext(ctx, createStudent, arg.ID, arg.Username, arg.Password)
	return err
}

const getStudent = `-- name: GetStudent :one
select id, username, password from Student where id = ?
`

func (q *Queries) GetStudent(ctx context.Context, id string) (Student, error) {
	row := q.db.QueryRowContext(ctx, getStudent, id)
	var i Student
	err := row.Scan(&i.ID, &i.Username, &i.Password)
	return i, err
}
