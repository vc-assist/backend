syntax = "proto3";

package cmd.powerschoold.api;

import "lib/scrapers/powerschool/query_all_students.proto";
import "lib/scrapers/powerschool/query_schedule.proto";
import "lib/scrapers/powerschool/query_student_data.proto";
import "services/studentdata/api/api.proto";

// GetAuthStatus
message GetAuthStatusRequest {
	string student_id = 1;
}
message GetAuthStatusResponse {
	bool is_authenticated = 1;
}

// GetOAuthFlow
message GetOAuthFlowRequest {}
message GetOAuthFlowResponse {
	services.studentdata.api.OAuthFlow flow = 1;
}

// ProvideOAuth
message ProvideOAuthRequest {
	string student_id = 1;
	string token = 2;
}
message ProvideOAuthResponse {}

// GetStudentData
message GetStudentDataRequest {
	string student_id = 1;
}
message GetStudentDataResponse {
	lib.scrapers.powerschool.StudentProfile profile = 1;
	lib.scrapers.powerschool.CourseMeetingList meetings = 2;
	repeated lib.scrapers.powerschool.CourseData course_data = 3;
}

// GetKnownCourses
message KnownCourse {
	string guid = 1;
	string name = 2;
	string period = 3;
	string teacher_first_name = 4;
	string teacher_last_name = 5;
	string teacher_email = 6;
	string room = 7;
}
message GetKnownCoursesRequest {}
message GetKnownCoursesResponse {
	repeated KnownCourse courses = 1;
}

service PowerschoolService {
	rpc GetAuthStatus(GetAuthStatusRequest) returns (GetAuthStatusResponse);

	rpc GetOAuthFlow(GetOAuthFlowRequest) returns (GetOAuthFlowResponse);
	rpc ProvideOAuth(ProvideOAuthRequest) returns (ProvideOAuthResponse);

	rpc GetStudentData(GetStudentDataRequest) returns (GetStudentDataResponse);
	rpc GetKnownCourses(GetKnownCoursesRequest) returns (GetKnownCoursesResponse);
}

