// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file cmd/powerschoold/api/api.proto (package cmd.powerschoold.api, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { StudentProfile } from "../../../lib/scrapers/powerschool/query_all_students_pb.js";
import { CourseMeetingList } from "../../../lib/scrapers/powerschool/query_schedule_pb.js";
import { CourseData } from "../../../lib/scrapers/powerschool/query_student_data_pb.js";

/**
 * GetAuthStatus
 *
 * @generated from message cmd.powerschoold.api.GetAuthStatusRequest
 */
export class GetAuthStatusRequest extends Message<GetAuthStatusRequest> {
  /**
   * @generated from field: string student_id = 1;
   */
  studentId = "";

  constructor(data?: PartialMessage<GetAuthStatusRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cmd.powerschoold.api.GetAuthStatusRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "student_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAuthStatusRequest {
    return new GetAuthStatusRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAuthStatusRequest {
    return new GetAuthStatusRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAuthStatusRequest {
    return new GetAuthStatusRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetAuthStatusRequest | PlainMessage<GetAuthStatusRequest> | undefined, b: GetAuthStatusRequest | PlainMessage<GetAuthStatusRequest> | undefined): boolean {
    return proto3.util.equals(GetAuthStatusRequest, a, b);
  }
}

/**
 * @generated from message cmd.powerschoold.api.GetAuthStatusResponse
 */
export class GetAuthStatusResponse extends Message<GetAuthStatusResponse> {
  /**
   * @generated from field: bool is_authenticated = 1;
   */
  isAuthenticated = false;

  constructor(data?: PartialMessage<GetAuthStatusResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cmd.powerschoold.api.GetAuthStatusResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_authenticated", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAuthStatusResponse {
    return new GetAuthStatusResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAuthStatusResponse {
    return new GetAuthStatusResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAuthStatusResponse {
    return new GetAuthStatusResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetAuthStatusResponse | PlainMessage<GetAuthStatusResponse> | undefined, b: GetAuthStatusResponse | PlainMessage<GetAuthStatusResponse> | undefined): boolean {
    return proto3.util.equals(GetAuthStatusResponse, a, b);
  }
}

/**
 * GetOAuthFlow
 *
 * @generated from message cmd.powerschoold.api.GetOAuthFlowRequest
 */
export class GetOAuthFlowRequest extends Message<GetOAuthFlowRequest> {
  constructor(data?: PartialMessage<GetOAuthFlowRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cmd.powerschoold.api.GetOAuthFlowRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOAuthFlowRequest {
    return new GetOAuthFlowRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOAuthFlowRequest {
    return new GetOAuthFlowRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOAuthFlowRequest {
    return new GetOAuthFlowRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOAuthFlowRequest | PlainMessage<GetOAuthFlowRequest> | undefined, b: GetOAuthFlowRequest | PlainMessage<GetOAuthFlowRequest> | undefined): boolean {
    return proto3.util.equals(GetOAuthFlowRequest, a, b);
  }
}

/**
 * @generated from message cmd.powerschoold.api.GetOAuthFlowResponse
 */
export class GetOAuthFlowResponse extends Message<GetOAuthFlowResponse> {
  /**
   * @generated from field: string base_login_url = 1;
   */
  baseLoginUrl = "";

  /**
   * @generated from field: string access_type = 2;
   */
  accessType = "";

  /**
   * @generated from field: string scope = 3;
   */
  scope = "";

  /**
   * @generated from field: string redirect_uri = 4;
   */
  redirectUri = "";

  /**
   * @generated from field: string code_verifier = 5;
   */
  codeVerifier = "";

  /**
   * @generated from field: string client_id = 6;
   */
  clientId = "";

  /**
   * @generated from field: string token_request_url = 7;
   */
  tokenRequestUrl = "";

  constructor(data?: PartialMessage<GetOAuthFlowResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cmd.powerschoold.api.GetOAuthFlowResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "base_login_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "access_type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "scope", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "redirect_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "code_verifier", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "token_request_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOAuthFlowResponse {
    return new GetOAuthFlowResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOAuthFlowResponse {
    return new GetOAuthFlowResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOAuthFlowResponse {
    return new GetOAuthFlowResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOAuthFlowResponse | PlainMessage<GetOAuthFlowResponse> | undefined, b: GetOAuthFlowResponse | PlainMessage<GetOAuthFlowResponse> | undefined): boolean {
    return proto3.util.equals(GetOAuthFlowResponse, a, b);
  }
}

/**
 * ProvideOAuth
 *
 * @generated from message cmd.powerschoold.api.ProvideOAuthRequest
 */
export class ProvideOAuthRequest extends Message<ProvideOAuthRequest> {
  /**
   * @generated from field: string student_id = 1;
   */
  studentId = "";

  /**
   * @generated from field: string token = 2;
   */
  token = "";

  constructor(data?: PartialMessage<ProvideOAuthRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cmd.powerschoold.api.ProvideOAuthRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "student_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProvideOAuthRequest {
    return new ProvideOAuthRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProvideOAuthRequest {
    return new ProvideOAuthRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProvideOAuthRequest {
    return new ProvideOAuthRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ProvideOAuthRequest | PlainMessage<ProvideOAuthRequest> | undefined, b: ProvideOAuthRequest | PlainMessage<ProvideOAuthRequest> | undefined): boolean {
    return proto3.util.equals(ProvideOAuthRequest, a, b);
  }
}

/**
 * @generated from message cmd.powerschoold.api.ProvideOAuthResponse
 */
export class ProvideOAuthResponse extends Message<ProvideOAuthResponse> {
  constructor(data?: PartialMessage<ProvideOAuthResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cmd.powerschoold.api.ProvideOAuthResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProvideOAuthResponse {
    return new ProvideOAuthResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProvideOAuthResponse {
    return new ProvideOAuthResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProvideOAuthResponse {
    return new ProvideOAuthResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ProvideOAuthResponse | PlainMessage<ProvideOAuthResponse> | undefined, b: ProvideOAuthResponse | PlainMessage<ProvideOAuthResponse> | undefined): boolean {
    return proto3.util.equals(ProvideOAuthResponse, a, b);
  }
}

/**
 * GetStudentData
 *
 * @generated from message cmd.powerschoold.api.GetStudentDataRequest
 */
export class GetStudentDataRequest extends Message<GetStudentDataRequest> {
  /**
   * @generated from field: string student_id = 1;
   */
  studentId = "";

  constructor(data?: PartialMessage<GetStudentDataRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cmd.powerschoold.api.GetStudentDataRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "student_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStudentDataRequest {
    return new GetStudentDataRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStudentDataRequest {
    return new GetStudentDataRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStudentDataRequest {
    return new GetStudentDataRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetStudentDataRequest | PlainMessage<GetStudentDataRequest> | undefined, b: GetStudentDataRequest | PlainMessage<GetStudentDataRequest> | undefined): boolean {
    return proto3.util.equals(GetStudentDataRequest, a, b);
  }
}

/**
 * @generated from message cmd.powerschoold.api.GetStudentDataResponse
 */
export class GetStudentDataResponse extends Message<GetStudentDataResponse> {
  /**
   * @generated from field: lib.scrapers.powerschool.StudentProfile profile = 1;
   */
  profile?: StudentProfile;

  /**
   * @generated from field: lib.scrapers.powerschool.CourseMeetingList meetings = 2;
   */
  meetings?: CourseMeetingList;

  /**
   * @generated from field: repeated lib.scrapers.powerschool.CourseData course_data = 3;
   */
  courseData: CourseData[] = [];

  constructor(data?: PartialMessage<GetStudentDataResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cmd.powerschoold.api.GetStudentDataResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "profile", kind: "message", T: StudentProfile },
    { no: 2, name: "meetings", kind: "message", T: CourseMeetingList },
    { no: 3, name: "course_data", kind: "message", T: CourseData, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStudentDataResponse {
    return new GetStudentDataResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStudentDataResponse {
    return new GetStudentDataResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStudentDataResponse {
    return new GetStudentDataResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetStudentDataResponse | PlainMessage<GetStudentDataResponse> | undefined, b: GetStudentDataResponse | PlainMessage<GetStudentDataResponse> | undefined): boolean {
    return proto3.util.equals(GetStudentDataResponse, a, b);
  }
}

/**
 * GetKnownCourses
 *
 * @generated from message cmd.powerschoold.api.KnownCourse
 */
export class KnownCourse extends Message<KnownCourse> {
  /**
   * @generated from field: string guid = 1;
   */
  guid = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string period = 3;
   */
  period = "";

  /**
   * @generated from field: string teacher_first_name = 4;
   */
  teacherFirstName = "";

  /**
   * @generated from field: string teacher_last_name = 5;
   */
  teacherLastName = "";

  /**
   * @generated from field: string teacher_email = 6;
   */
  teacherEmail = "";

  /**
   * @generated from field: string room = 7;
   */
  room = "";

  constructor(data?: PartialMessage<KnownCourse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cmd.powerschoold.api.KnownCourse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "guid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "period", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "teacher_first_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "teacher_last_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "teacher_email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "room", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KnownCourse {
    return new KnownCourse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KnownCourse {
    return new KnownCourse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KnownCourse {
    return new KnownCourse().fromJsonString(jsonString, options);
  }

  static equals(a: KnownCourse | PlainMessage<KnownCourse> | undefined, b: KnownCourse | PlainMessage<KnownCourse> | undefined): boolean {
    return proto3.util.equals(KnownCourse, a, b);
  }
}

/**
 * @generated from message cmd.powerschoold.api.GetKnownCoursesRequest
 */
export class GetKnownCoursesRequest extends Message<GetKnownCoursesRequest> {
  constructor(data?: PartialMessage<GetKnownCoursesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cmd.powerschoold.api.GetKnownCoursesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKnownCoursesRequest {
    return new GetKnownCoursesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKnownCoursesRequest {
    return new GetKnownCoursesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKnownCoursesRequest {
    return new GetKnownCoursesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetKnownCoursesRequest | PlainMessage<GetKnownCoursesRequest> | undefined, b: GetKnownCoursesRequest | PlainMessage<GetKnownCoursesRequest> | undefined): boolean {
    return proto3.util.equals(GetKnownCoursesRequest, a, b);
  }
}

/**
 * @generated from message cmd.powerschoold.api.GetKnownCoursesResponse
 */
export class GetKnownCoursesResponse extends Message<GetKnownCoursesResponse> {
  /**
   * @generated from field: repeated cmd.powerschoold.api.KnownCourse courses = 1;
   */
  courses: KnownCourse[] = [];

  constructor(data?: PartialMessage<GetKnownCoursesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cmd.powerschoold.api.GetKnownCoursesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "courses", kind: "message", T: KnownCourse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetKnownCoursesResponse {
    return new GetKnownCoursesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetKnownCoursesResponse {
    return new GetKnownCoursesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetKnownCoursesResponse {
    return new GetKnownCoursesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetKnownCoursesResponse | PlainMessage<GetKnownCoursesResponse> | undefined, b: GetKnownCoursesResponse | PlainMessage<GetKnownCoursesResponse> | undefined): boolean {
    return proto3.util.equals(GetKnownCoursesResponse, a, b);
  }
}

