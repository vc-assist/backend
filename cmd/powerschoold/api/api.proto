syntax = "proto3";

package cmd.powerschoold.api;

import "lib/platforms/powerschool/query_all_students.proto";
import "lib/platforms/powerschool/query_schedule.proto";
import "lib/platforms/powerschool/query_student_data.proto";

// GetAuthStatus
message GetAuthStatusRequest {
	string student_id = 1;
}
message GetAuthStatusResponse {
	bool is_authenticated = 1;
}

// GetAuthFlow
message OAuthFlow {
	string base_login_url = 1;
	string access_type = 2;
	string scope = 3;
	string redirect_uri = 4;
	string code_verifier = 5;
	string client_id = 6;
	string token_request_url = 7;
}
message GetAuthFlowRequest {}
message GetAuthFlowResponse {
	oneof flow {
		OAuthFlow oauth = 1;
	}
}

// ProvideOAuth
message ProvideOAuthRequest {
	string student_id = 1;
	string token = 2;
}
message ProvideOAuthResponse {
	bool success = 1;
	string message = 2;
}

// GetStudentData
message GetStudentDataRequest {
	string student_id = 1;
}
message GetStudentDataResponse {
	lib.platforms.powerschool.StudentProfile profile = 1;
	lib.platforms.powerschool.CourseMeetingList meetings = 2;
	repeated lib.platforms.powerschool.CourseData course_data = 3;
}

// GetKnownCourses
message KnownCourse {
	string guid = 1;
	string name = 2;
	string period = 3;
	string teacher_first_name = 4;
	string teacher_last_name = 5;
	string teacher_email = 6;
	string room = 7;
}
message GetKnownCoursesRequest {}
message GetKnownCoursesResponse {
	repeated KnownCourse courses = 1;
}

service PowerschoolService {
	rpc GetAuthStatus(GetAuthStatusRequest) returns (GetAuthStatusResponse);
	rpc GetAuthFlow(GetAuthFlowRequest) returns (GetAuthFlowResponse);

	rpc ProvideOAuth(ProvideOAuthRequest) returns (ProvideOAuthResponse);
	rpc GetStudentData(GetStudentDataRequest) returns (GetStudentDataResponse);

	rpc GetKnownCourses(GetKnownCoursesRequest) returns (GetKnownCoursesResponse);
}

