// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: vcassist/powerschool/v1/types.proto

package powerschoolv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AssignmentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description    string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Category       string   `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	DueDate        int64    `protobuf:"varint,4,opt,name=due_date,json=dueDate,proto3" json:"due_date,omitempty"`
	PointsEarned   *float32 `protobuf:"fixed32,5,opt,name=points_earned,json=pointsEarned,proto3,oneof" json:"points_earned,omitempty"`
	PointsPossible *float32 `protobuf:"fixed32,6,opt,name=points_possible,json=pointsPossible,proto3,oneof" json:"points_possible,omitempty"`
	IsMissing      bool     `protobuf:"varint,7,opt,name=is_missing,json=isMissing,proto3" json:"is_missing,omitempty"`
	IsLate         bool     `protobuf:"varint,8,opt,name=is_late,json=isLate,proto3" json:"is_late,omitempty"`
	IsCollected    bool     `protobuf:"varint,9,opt,name=is_collected,json=isCollected,proto3" json:"is_collected,omitempty"`
	IsExempt       bool     `protobuf:"varint,10,opt,name=is_exempt,json=isExempt,proto3" json:"is_exempt,omitempty"`
	IsIncomplete   bool     `protobuf:"varint,11,opt,name=is_incomplete,json=isIncomplete,proto3" json:"is_incomplete,omitempty"`
}

func (x *AssignmentData) Reset() {
	*x = AssignmentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentData) ProtoMessage() {}

func (x *AssignmentData) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentData.ProtoReflect.Descriptor instead.
func (*AssignmentData) Descriptor() ([]byte, []int) {
	return file_vcassist_powerschool_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *AssignmentData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AssignmentData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AssignmentData) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *AssignmentData) GetDueDate() int64 {
	if x != nil {
		return x.DueDate
	}
	return 0
}

func (x *AssignmentData) GetPointsEarned() float32 {
	if x != nil && x.PointsEarned != nil {
		return *x.PointsEarned
	}
	return 0
}

func (x *AssignmentData) GetPointsPossible() float32 {
	if x != nil && x.PointsPossible != nil {
		return *x.PointsPossible
	}
	return 0
}

func (x *AssignmentData) GetIsMissing() bool {
	if x != nil {
		return x.IsMissing
	}
	return false
}

func (x *AssignmentData) GetIsLate() bool {
	if x != nil {
		return x.IsLate
	}
	return false
}

func (x *AssignmentData) GetIsCollected() bool {
	if x != nil {
		return x.IsCollected
	}
	return false
}

func (x *AssignmentData) GetIsExempt() bool {
	if x != nil {
		return x.IsExempt
	}
	return false
}

func (x *AssignmentData) GetIsIncomplete() bool {
	if x != nil {
		return x.IsIncomplete
	}
	return false
}

type Meeting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	Stop  int64 `protobuf:"varint,2,opt,name=stop,proto3" json:"stop,omitempty"`
}

func (x *Meeting) Reset() {
	*x = Meeting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meeting) ProtoMessage() {}

func (x *Meeting) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meeting.ProtoReflect.Descriptor instead.
func (*Meeting) Descriptor() ([]byte, []int) {
	return file_vcassist_powerschool_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *Meeting) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Meeting) GetStop() int64 {
	if x != nil {
		return x.Stop
	}
	return 0
}

type AssignmentCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// this is a value from 0-1
	Weight float32 `protobuf:"fixed32,2,opt,name=weight,proto3" json:"weight,omitempty"`
}

func (x *AssignmentCategory) Reset() {
	*x = AssignmentCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignmentCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignmentCategory) ProtoMessage() {}

func (x *AssignmentCategory) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignmentCategory.ProtoReflect.Descriptor instead.
func (*AssignmentCategory) Descriptor() ([]byte, []int) {
	return file_vcassist_powerschool_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *AssignmentCategory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AssignmentCategory) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type GradeSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	// this is a value from 0-100
	Value float32 `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GradeSnapshot) Reset() {
	*x = GradeSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradeSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradeSnapshot) ProtoMessage() {}

func (x *GradeSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradeSnapshot.ProtoReflect.Descriptor instead.
func (*GradeSnapshot) Descriptor() ([]byte, []int) {
	return file_vcassist_powerschool_v1_types_proto_rawDescGZIP(), []int{3}
}

func (x *GradeSnapshot) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GradeSnapshot) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type CourseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid                 string                `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Period               string                `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty"`
	Teacher              string                `protobuf:"bytes,4,opt,name=teacher,proto3" json:"teacher,omitempty"`
	TeacherEmail         string                `protobuf:"bytes,5,opt,name=teacher_email,json=teacherEmail,proto3" json:"teacher_email,omitempty"`
	Room                 string                `protobuf:"bytes,6,opt,name=room,proto3" json:"room,omitempty"`
	OverallGrade         float32               `protobuf:"fixed32,7,opt,name=overall_grade,json=overallGrade,proto3" json:"overall_grade,omitempty"`
	DayName              string                `protobuf:"bytes,8,opt,name=day_name,json=dayName,proto3" json:"day_name,omitempty"`
	HomeworkPasses       int32                 `protobuf:"varint,9,opt,name=homework_passes,json=homeworkPasses,proto3" json:"homework_passes,omitempty"`
	Assignments          []*AssignmentData     `protobuf:"bytes,10,rep,name=assignments,proto3" json:"assignments,omitempty"`
	Meetings             []*Meeting            `protobuf:"bytes,11,rep,name=meetings,proto3" json:"meetings,omitempty"`
	Snapshots            []*GradeSnapshot      `protobuf:"bytes,12,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	AssignmentCategories []*AssignmentCategory `protobuf:"bytes,13,rep,name=assignment_categories,json=assignmentCategories,proto3" json:"assignment_categories,omitempty"`
}

func (x *CourseData) Reset() {
	*x = CourseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseData) ProtoMessage() {}

func (x *CourseData) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseData.ProtoReflect.Descriptor instead.
func (*CourseData) Descriptor() ([]byte, []int) {
	return file_vcassist_powerschool_v1_types_proto_rawDescGZIP(), []int{4}
}

func (x *CourseData) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *CourseData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CourseData) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *CourseData) GetTeacher() string {
	if x != nil {
		return x.Teacher
	}
	return ""
}

func (x *CourseData) GetTeacherEmail() string {
	if x != nil {
		return x.TeacherEmail
	}
	return ""
}

func (x *CourseData) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *CourseData) GetOverallGrade() float32 {
	if x != nil {
		return x.OverallGrade
	}
	return 0
}

func (x *CourseData) GetDayName() string {
	if x != nil {
		return x.DayName
	}
	return ""
}

func (x *CourseData) GetHomeworkPasses() int32 {
	if x != nil {
		return x.HomeworkPasses
	}
	return 0
}

func (x *CourseData) GetAssignments() []*AssignmentData {
	if x != nil {
		return x.Assignments
	}
	return nil
}

func (x *CourseData) GetMeetings() []*Meeting {
	if x != nil {
		return x.Meetings
	}
	return nil
}

func (x *CourseData) GetSnapshots() []*GradeSnapshot {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

func (x *CourseData) GetAssignmentCategories() []*AssignmentCategory {
	if x != nil {
		return x.AssignmentCategories
	}
	return nil
}

type SchoolData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Phone         string `protobuf:"bytes,2,opt,name=phone,proto3" json:"phone,omitempty"`
	Fax           string `protobuf:"bytes,3,opt,name=fax,proto3" json:"fax,omitempty"`
	Email         string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	StreetAddress string `protobuf:"bytes,5,opt,name=street_address,json=streetAddress,proto3" json:"street_address,omitempty"`
	City          string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	State         string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	Zip           string `protobuf:"bytes,8,opt,name=zip,proto3" json:"zip,omitempty"`
	Country       string `protobuf:"bytes,9,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *SchoolData) Reset() {
	*x = SchoolData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchoolData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchoolData) ProtoMessage() {}

func (x *SchoolData) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchoolData.ProtoReflect.Descriptor instead.
func (*SchoolData) Descriptor() ([]byte, []int) {
	return file_vcassist_powerschool_v1_types_proto_rawDescGZIP(), []int{5}
}

func (x *SchoolData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SchoolData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SchoolData) GetFax() string {
	if x != nil {
		return x.Fax
	}
	return ""
}

func (x *SchoolData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SchoolData) GetStreetAddress() string {
	if x != nil {
		return x.StreetAddress
	}
	return ""
}

func (x *SchoolData) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SchoolData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SchoolData) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *SchoolData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type Bulletin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	StartDate int64  `protobuf:"varint,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   int64  `protobuf:"varint,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Body      string `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Bulletin) Reset() {
	*x = Bulletin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bulletin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bulletin) ProtoMessage() {}

func (x *Bulletin) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bulletin.ProtoReflect.Descriptor instead.
func (*Bulletin) Descriptor() ([]byte, []int) {
	return file_vcassist_powerschool_v1_types_proto_rawDescGZIP(), []int{6}
}

func (x *Bulletin) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Bulletin) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *Bulletin) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *Bulletin) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type StudentProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid       string  `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	CurrentGpa float32 `protobuf:"fixed32,2,opt,name=current_gpa,json=currentGpa,proto3" json:"current_gpa,omitempty"`
	Name       string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Photo      []byte  `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *StudentProfile) Reset() {
	*x = StudentProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentProfile) ProtoMessage() {}

func (x *StudentProfile) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_powerschool_v1_types_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentProfile.ProtoReflect.Descriptor instead.
func (*StudentProfile) Descriptor() ([]byte, []int) {
	return file_vcassist_powerschool_v1_types_proto_rawDescGZIP(), []int{7}
}

func (x *StudentProfile) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *StudentProfile) GetCurrentGpa() float32 {
	if x != nil {
		return x.CurrentGpa
	}
	return 0
}

func (x *StudentProfile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StudentProfile) GetPhoto() []byte {
	if x != nil {
		return x.Photo
	}
	return nil
}

var File_vcassist_powerschool_v1_types_proto protoreflect.FileDescriptor

var file_vcassist_powerschool_v1_types_proto_rawDesc = []byte{
	0x0a, 0x23, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x22, 0x9a,
	0x03, 0x0a, 0x0e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x0d, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x0f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x02, 0x48, 0x01, 0x52, 0x0e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x50, 0x6f, 0x73,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x61, 0x74, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x65, 0x6d, 0x70, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x45, 0x78, 0x65, 0x6d, 0x70, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x49, 0x6e, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0x33, 0x0a, 0x07, 0x4d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x74, 0x6f, 0x70,
	0x22, 0x40, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x22, 0x39, 0x0a, 0x0d, 0x47, 0x72, 0x61, 0x64, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb9, 0x04,
	0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x6f, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x12,
	0x23, 0x0a, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x50, 0x61, 0x73, 0x73, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x44, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x09, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x60, 0x0a, 0x15, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x14, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x0a, 0x53, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x66, 0x61, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x7a,
	0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x7a, 0x69, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x6e, 0x0a, 0x08, 0x42, 0x75, 0x6c, 0x6c, 0x65,
	0x74, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x6f, 0x0a, 0x0e, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x70, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47, 0x70, 0x61, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0xe3, 0x01, 0x0a, 0x1b, 0x63, 0x6f, 0x6d,
	0x2e, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3a, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x63, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x76, 0x31, 0xa2, 0x02, 0x03, 0x56, 0x50, 0x58, 0xaa, 0x02, 0x17, 0x56, 0x63, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x17, 0x56, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x5c, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x23, 0x56,
	0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x5c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x19, 0x56, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x3a, 0x3a, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vcassist_powerschool_v1_types_proto_rawDescOnce sync.Once
	file_vcassist_powerschool_v1_types_proto_rawDescData = file_vcassist_powerschool_v1_types_proto_rawDesc
)

func file_vcassist_powerschool_v1_types_proto_rawDescGZIP() []byte {
	file_vcassist_powerschool_v1_types_proto_rawDescOnce.Do(func() {
		file_vcassist_powerschool_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_vcassist_powerschool_v1_types_proto_rawDescData)
	})
	return file_vcassist_powerschool_v1_types_proto_rawDescData
}

var file_vcassist_powerschool_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_vcassist_powerschool_v1_types_proto_goTypes = []any{
	(*AssignmentData)(nil),     // 0: vcassist.powerschool.v1.AssignmentData
	(*Meeting)(nil),            // 1: vcassist.powerschool.v1.Meeting
	(*AssignmentCategory)(nil), // 2: vcassist.powerschool.v1.AssignmentCategory
	(*GradeSnapshot)(nil),      // 3: vcassist.powerschool.v1.GradeSnapshot
	(*CourseData)(nil),         // 4: vcassist.powerschool.v1.CourseData
	(*SchoolData)(nil),         // 5: vcassist.powerschool.v1.SchoolData
	(*Bulletin)(nil),           // 6: vcassist.powerschool.v1.Bulletin
	(*StudentProfile)(nil),     // 7: vcassist.powerschool.v1.StudentProfile
}
var file_vcassist_powerschool_v1_types_proto_depIdxs = []int32{
	0, // 0: vcassist.powerschool.v1.CourseData.assignments:type_name -> vcassist.powerschool.v1.AssignmentData
	1, // 1: vcassist.powerschool.v1.CourseData.meetings:type_name -> vcassist.powerschool.v1.Meeting
	3, // 2: vcassist.powerschool.v1.CourseData.snapshots:type_name -> vcassist.powerschool.v1.GradeSnapshot
	2, // 3: vcassist.powerschool.v1.CourseData.assignment_categories:type_name -> vcassist.powerschool.v1.AssignmentCategory
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_vcassist_powerschool_v1_types_proto_init() }
func file_vcassist_powerschool_v1_types_proto_init() {
	if File_vcassist_powerschool_v1_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vcassist_powerschool_v1_types_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AssignmentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_powerschool_v1_types_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Meeting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_powerschool_v1_types_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AssignmentCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_powerschool_v1_types_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GradeSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_powerschool_v1_types_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CourseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_powerschool_v1_types_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SchoolData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_powerschool_v1_types_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Bulletin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_powerschool_v1_types_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*StudentProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_vcassist_powerschool_v1_types_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vcassist_powerschool_v1_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_vcassist_powerschool_v1_types_proto_goTypes,
		DependencyIndexes: file_vcassist_powerschool_v1_types_proto_depIdxs,
		MessageInfos:      file_vcassist_powerschool_v1_types_proto_msgTypes,
	}.Build()
	File_vcassist_powerschool_v1_types_proto = out.File
	file_vcassist_powerschool_v1_types_proto_rawDesc = nil
	file_vcassist_powerschool_v1_types_proto_goTypes = nil
	file_vcassist_powerschool_v1_types_proto_depIdxs = nil
}
