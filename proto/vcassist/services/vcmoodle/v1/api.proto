syntax = "proto3";

package vcassist.services.vcmoodle.v1;

// GetAuthStatus
message GetAuthStatusRequest {}
message GetAuthStatusResponse {
  bool provided = 1;
}

// ProvideUsernamePassword
message ProvideUsernamePasswordRequest {
  string username = 1;
  string password = 2;
}
message ProvideUsernamePasswordResponse {}

// GetCourses
enum ResourceType {
  GENERIC_URL = 0;
  FILE = 1;
  BOOK = 2;
  HTML_AREA = 3;
}
message Chapter {
  int64 id = 1;
  string name = 2;
  string url = 3;
  // if this field is not null, the html in this field will be displayed
  // on the home page as "today's lesson plan" for the course it belongs to
  string homepage_content = 4;
  // the dates the chapter likely belongs to
  repeated int64 dates = 5;
}
message Resource {
  int64 idx = 1;
  ResourceType type = 2;
  string url = 3;
  string display_content = 4;
  // this will be null for resources that are not BOOK
  repeated Chapter chapters = 5;
}
message Section {
  int64 idx = 1;
  string name = 2;
  string url = 3;
  repeated Resource resources = 4;
}
message Course {
  int64 id = 1;
  string name = 2;
  string teacher = 3;
  string url = 4;
  repeated Section sections = 5;
}
message GetCoursesRequest {}
message GetCoursesResponse {
  repeated Course courses = 1;
}

// GetChapterContent
message GetChapterContentRequest {
  int64 id = 1;
}
message GetChapterContentResponse {
  string html = 1;
}

// GetFileContent
message GetFileContentRequest {
  string url = 1;
}
message GetFileContentResponse {
  bool last = 1;
  bytes chunk = 2;
}

// RefreshCourses
message RefreshCoursesRequest {}
message RefreshCoursesResponse {
  repeated Course courses = 1;
}

service MoodleService {
  rpc GetAuthStatus(GetAuthStatusRequest) returns (GetAuthStatusResponse);
  rpc ProvideUsernamePassword(ProvideUsernamePasswordRequest) returns (ProvideUsernamePasswordResponse);

  rpc GetCourses(GetCoursesRequest) returns (GetCoursesResponse);
  rpc RefreshCourses(RefreshCoursesRequest) returns (RefreshCoursesResponse);
  rpc GetChapterContent(GetChapterContentRequest) returns (GetChapterContentResponse);
  rpc GetFileContent(GetFileContentRequest) returns (stream GetFileContentResponse);
}
