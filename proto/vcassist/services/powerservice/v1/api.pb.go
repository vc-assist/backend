// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: vcassist/services/powerservice/v1/api.proto

package powerservicev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	v11 "vcassist-backend/proto/vcassist/scrapers/powerschool/v1"
	v1 "vcassist-backend/proto/vcassist/services/studentdata/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetAuthStatus
type GetAuthStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
}

func (x *GetAuthStatusRequest) Reset() {
	*x = GetAuthStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthStatusRequest) ProtoMessage() {}

func (x *GetAuthStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthStatusRequest.ProtoReflect.Descriptor instead.
func (*GetAuthStatusRequest) Descriptor() ([]byte, []int) {
	return file_vcassist_services_powerservice_v1_api_proto_rawDescGZIP(), []int{0}
}

func (x *GetAuthStatusRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type GetAuthStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAuthenticated bool `protobuf:"varint,1,opt,name=is_authenticated,json=isAuthenticated,proto3" json:"is_authenticated,omitempty"`
}

func (x *GetAuthStatusResponse) Reset() {
	*x = GetAuthStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthStatusResponse) ProtoMessage() {}

func (x *GetAuthStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthStatusResponse.ProtoReflect.Descriptor instead.
func (*GetAuthStatusResponse) Descriptor() ([]byte, []int) {
	return file_vcassist_services_powerservice_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetAuthStatusResponse) GetIsAuthenticated() bool {
	if x != nil {
		return x.IsAuthenticated
	}
	return false
}

// GetOAuthFlow
type GetOAuthFlowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOAuthFlowRequest) Reset() {
	*x = GetOAuthFlowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOAuthFlowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOAuthFlowRequest) ProtoMessage() {}

func (x *GetOAuthFlowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOAuthFlowRequest.ProtoReflect.Descriptor instead.
func (*GetOAuthFlowRequest) Descriptor() ([]byte, []int) {
	return file_vcassist_services_powerservice_v1_api_proto_rawDescGZIP(), []int{2}
}

type GetOAuthFlowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flow *v1.OAuthFlow `protobuf:"bytes,1,opt,name=flow,proto3" json:"flow,omitempty"`
}

func (x *GetOAuthFlowResponse) Reset() {
	*x = GetOAuthFlowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOAuthFlowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOAuthFlowResponse) ProtoMessage() {}

func (x *GetOAuthFlowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOAuthFlowResponse.ProtoReflect.Descriptor instead.
func (*GetOAuthFlowResponse) Descriptor() ([]byte, []int) {
	return file_vcassist_services_powerservice_v1_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetOAuthFlowResponse) GetFlow() *v1.OAuthFlow {
	if x != nil {
		return x.Flow
	}
	return nil
}

// ProvideOAuth
type ProvideOAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
	Token     string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ProvideOAuthRequest) Reset() {
	*x = ProvideOAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvideOAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvideOAuthRequest) ProtoMessage() {}

func (x *ProvideOAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvideOAuthRequest.ProtoReflect.Descriptor instead.
func (*ProvideOAuthRequest) Descriptor() ([]byte, []int) {
	return file_vcassist_services_powerservice_v1_api_proto_rawDescGZIP(), []int{4}
}

func (x *ProvideOAuthRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

func (x *ProvideOAuthRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ProvideOAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProvideOAuthResponse) Reset() {
	*x = ProvideOAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvideOAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvideOAuthResponse) ProtoMessage() {}

func (x *ProvideOAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvideOAuthResponse.ProtoReflect.Descriptor instead.
func (*ProvideOAuthResponse) Descriptor() ([]byte, []int) {
	return file_vcassist_services_powerservice_v1_api_proto_rawDescGZIP(), []int{5}
}

// GetStudentData
type GetStudentDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentId string `protobuf:"bytes,1,opt,name=student_id,json=studentId,proto3" json:"student_id,omitempty"`
}

func (x *GetStudentDataRequest) Reset() {
	*x = GetStudentDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentDataRequest) ProtoMessage() {}

func (x *GetStudentDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentDataRequest.ProtoReflect.Descriptor instead.
func (*GetStudentDataRequest) Descriptor() ([]byte, []int) {
	return file_vcassist_services_powerservice_v1_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetStudentDataRequest) GetStudentId() string {
	if x != nil {
		return x.StudentId
	}
	return ""
}

type GetStudentDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profile    *v11.StudentProfile    `protobuf:"bytes,1,opt,name=profile,proto3" json:"profile,omitempty"`
	Meetings   *v11.CourseMeetingList `protobuf:"bytes,2,opt,name=meetings,proto3" json:"meetings,omitempty"`
	CourseData []*v11.CourseData      `protobuf:"bytes,3,rep,name=course_data,json=courseData,proto3" json:"course_data,omitempty"`
	Photo      *v11.StudentPhoto      `protobuf:"bytes,4,opt,name=photo,proto3" json:"photo,omitempty"`
}

func (x *GetStudentDataResponse) Reset() {
	*x = GetStudentDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStudentDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStudentDataResponse) ProtoMessage() {}

func (x *GetStudentDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vcassist_services_powerservice_v1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStudentDataResponse.ProtoReflect.Descriptor instead.
func (*GetStudentDataResponse) Descriptor() ([]byte, []int) {
	return file_vcassist_services_powerservice_v1_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetStudentDataResponse) GetProfile() *v11.StudentProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *GetStudentDataResponse) GetMeetings() *v11.CourseMeetingList {
	if x != nil {
		return x.Meetings
	}
	return nil
}

func (x *GetStudentDataResponse) GetCourseData() []*v11.CourseData {
	if x != nil {
		return x.CourseData
	}
	return nil
}

func (x *GetStudentDataResponse) GetPhoto() *v11.StudentPhoto {
	if x != nil {
		return x.Photo
	}
	return nil
}

var File_vcassist_services_powerservice_v1_api_proto protoreflect.FileDescriptor

var file_vcassist_services_powerservice_v1_api_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x76,
	0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x39, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2f, 0x73, 0x63, 0x72, 0x61, 0x70,
	0x65, 0x72, 0x73, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2f,
	0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x76, 0x63, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x2f, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x39, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2f, 0x73, 0x63, 0x72,
	0x61, 0x70, 0x65, 0x72, 0x73, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x76,
	0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2f, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x73,
	0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x76, 0x63, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x35, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x46, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x04, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x04, 0x66, 0x6c, 0x6f, 0x77,
	0x22, 0x4a, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x16, 0x0a, 0x14,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65,
	0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xca, 0x02, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x76, 0x63, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x12, 0x4f, 0x0a, 0x08, 0x6d, 0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73,
	0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4d,
	0x65, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x65, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x4d, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x76, 0x63, 0x61, 0x73,
	0x73, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x63, 0x72, 0x61, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x63,
	0x72, 0x61, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f,
	0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x32, 0xa3, 0x04, 0x0a, 0x12, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x82, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x37, 0x2e, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x76, 0x63,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74,
	0x68, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x36, 0x2e, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75,
	0x74, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x12, 0x36, 0x2e, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73,
	0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37,
	0x2e, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x2e, 0x76, 0x63, 0x61,
	0x73, 0x73, 0x69, 0x73, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0xa1, 0x02, 0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x41, 0x70, 0x69, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47, 0x76, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2d,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x63,
	0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b,
	0x70, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02,
	0x03, 0x56, 0x53, 0x50, 0xaa, 0x02, 0x21, 0x56, 0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x21, 0x56, 0x63, 0x61, 0x73, 0x73,
	0x69, 0x73, 0x74, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x50, 0x6f, 0x77,
	0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x2d, 0x56,
	0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x5c, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x24, 0x56,
	0x63, 0x61, 0x73, 0x73, 0x69, 0x73, 0x74, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x3a, 0x3a, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vcassist_services_powerservice_v1_api_proto_rawDescOnce sync.Once
	file_vcassist_services_powerservice_v1_api_proto_rawDescData = file_vcassist_services_powerservice_v1_api_proto_rawDesc
)

func file_vcassist_services_powerservice_v1_api_proto_rawDescGZIP() []byte {
	file_vcassist_services_powerservice_v1_api_proto_rawDescOnce.Do(func() {
		file_vcassist_services_powerservice_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_vcassist_services_powerservice_v1_api_proto_rawDescData)
	})
	return file_vcassist_services_powerservice_v1_api_proto_rawDescData
}

var file_vcassist_services_powerservice_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_vcassist_services_powerservice_v1_api_proto_goTypes = []any{
	(*GetAuthStatusRequest)(nil),   // 0: vcassist.services.powerservice.v1.GetAuthStatusRequest
	(*GetAuthStatusResponse)(nil),  // 1: vcassist.services.powerservice.v1.GetAuthStatusResponse
	(*GetOAuthFlowRequest)(nil),    // 2: vcassist.services.powerservice.v1.GetOAuthFlowRequest
	(*GetOAuthFlowResponse)(nil),   // 3: vcassist.services.powerservice.v1.GetOAuthFlowResponse
	(*ProvideOAuthRequest)(nil),    // 4: vcassist.services.powerservice.v1.ProvideOAuthRequest
	(*ProvideOAuthResponse)(nil),   // 5: vcassist.services.powerservice.v1.ProvideOAuthResponse
	(*GetStudentDataRequest)(nil),  // 6: vcassist.services.powerservice.v1.GetStudentDataRequest
	(*GetStudentDataResponse)(nil), // 7: vcassist.services.powerservice.v1.GetStudentDataResponse
	(*v1.OAuthFlow)(nil),           // 8: vcassist.services.studentdata.v1.OAuthFlow
	(*v11.StudentProfile)(nil),     // 9: vcassist.scrapers.powerschool.v1.StudentProfile
	(*v11.CourseMeetingList)(nil),  // 10: vcassist.scrapers.powerschool.v1.CourseMeetingList
	(*v11.CourseData)(nil),         // 11: vcassist.scrapers.powerschool.v1.CourseData
	(*v11.StudentPhoto)(nil),       // 12: vcassist.scrapers.powerschool.v1.StudentPhoto
}
var file_vcassist_services_powerservice_v1_api_proto_depIdxs = []int32{
	8,  // 0: vcassist.services.powerservice.v1.GetOAuthFlowResponse.flow:type_name -> vcassist.services.studentdata.v1.OAuthFlow
	9,  // 1: vcassist.services.powerservice.v1.GetStudentDataResponse.profile:type_name -> vcassist.scrapers.powerschool.v1.StudentProfile
	10, // 2: vcassist.services.powerservice.v1.GetStudentDataResponse.meetings:type_name -> vcassist.scrapers.powerschool.v1.CourseMeetingList
	11, // 3: vcassist.services.powerservice.v1.GetStudentDataResponse.course_data:type_name -> vcassist.scrapers.powerschool.v1.CourseData
	12, // 4: vcassist.services.powerservice.v1.GetStudentDataResponse.photo:type_name -> vcassist.scrapers.powerschool.v1.StudentPhoto
	0,  // 5: vcassist.services.powerservice.v1.PowerschoolService.GetAuthStatus:input_type -> vcassist.services.powerservice.v1.GetAuthStatusRequest
	2,  // 6: vcassist.services.powerservice.v1.PowerschoolService.GetOAuthFlow:input_type -> vcassist.services.powerservice.v1.GetOAuthFlowRequest
	4,  // 7: vcassist.services.powerservice.v1.PowerschoolService.ProvideOAuth:input_type -> vcassist.services.powerservice.v1.ProvideOAuthRequest
	6,  // 8: vcassist.services.powerservice.v1.PowerschoolService.GetStudentData:input_type -> vcassist.services.powerservice.v1.GetStudentDataRequest
	1,  // 9: vcassist.services.powerservice.v1.PowerschoolService.GetAuthStatus:output_type -> vcassist.services.powerservice.v1.GetAuthStatusResponse
	3,  // 10: vcassist.services.powerservice.v1.PowerschoolService.GetOAuthFlow:output_type -> vcassist.services.powerservice.v1.GetOAuthFlowResponse
	5,  // 11: vcassist.services.powerservice.v1.PowerschoolService.ProvideOAuth:output_type -> vcassist.services.powerservice.v1.ProvideOAuthResponse
	7,  // 12: vcassist.services.powerservice.v1.PowerschoolService.GetStudentData:output_type -> vcassist.services.powerservice.v1.GetStudentDataResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_vcassist_services_powerservice_v1_api_proto_init() }
func file_vcassist_services_powerservice_v1_api_proto_init() {
	if File_vcassist_services_powerservice_v1_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vcassist_services_powerservice_v1_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetAuthStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_services_powerservice_v1_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetAuthStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_services_powerservice_v1_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetOAuthFlowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_services_powerservice_v1_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetOAuthFlowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_services_powerservice_v1_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ProvideOAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_services_powerservice_v1_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ProvideOAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_services_powerservice_v1_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetStudentDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcassist_services_powerservice_v1_api_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetStudentDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vcassist_services_powerservice_v1_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vcassist_services_powerservice_v1_api_proto_goTypes,
		DependencyIndexes: file_vcassist_services_powerservice_v1_api_proto_depIdxs,
		MessageInfos:      file_vcassist_services_powerservice_v1_api_proto_msgTypes,
	}.Build()
	File_vcassist_services_powerservice_v1_api_proto = out.File
	file_vcassist_services_powerservice_v1_api_proto_rawDesc = nil
	file_vcassist_services_powerservice_v1_api_proto_goTypes = nil
	file_vcassist_services_powerservice_v1_api_proto_depIdxs = nil
}
